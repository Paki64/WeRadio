services:
  # PostgreSQL
  postgres:
    image: postgres:17-alpine
    container_name: weradio-postgres
    environment:
      POSTGRES_DB: weradio
      POSTGRES_USER: weradio_user
      POSTGRES_PASSWORD: weradio_pass
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: Europe/Rome
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U weradio_user -d weradio"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: weradio-redis
    command: redis-server --requirepass password123
    environment:
      TZ: Europe/Rome
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # MinIO
  minio:
    image: minio/minio:latest
    container_name: weradio-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
      TZ: Europe/Rome
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Backend - Streamer Mode
  backend-streamer:
    image: paki13/weradio-backend:latest
    build: ./backend
    container_name: weradio-backend-streamer
    ports:
      - "5000:5000"
    environment:
      STREAMER: "true"
      OBJECT_STORAGE: "true"
      WERADIO_PORT: 5000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: weradio
      POSTGRES_USER: weradio_user
      POSTGRES_PASSWORD: weradio_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: password123
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password123
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backend/data:/app/data
    restart: unless-stopped

  # Backend - API-Only Mode
  backend-api:
    image: paki13/weradio-backend:latest
    build: ./backend
    container_name: weradio-backend-api
    ports:
      - "5001:5001"
    environment:
      STREAMER: "false"
      OBJECT_STORAGE: "true"
      WERADIO_PORT: 5001
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: weradio
      POSTGRES_USER: weradio_user
      POSTGRES_PASSWORD: weradio_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: password123
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password123
    depends_on:
      backend-streamer:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./backend/data:/app/data
    restart: unless-stopped

  # Frontend
  frontend:
    image: paki13/weradio-frontend:latest
    build: ./frontend
    container_name: weradio-frontend
    ports:
      - "3000:3000"
    environment:
      FRONTEND_PORT: 3000
      API_URL: http://localhost:5001
    depends_on:
      backend-api:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local