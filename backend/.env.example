# WeRadio Environment Configuration
# ==================================
# 
# Copy this file to .env and customize as needed

# Server Configuration
# --------------------
WERADIO_HOST=0.0.0.0
WERADIO_PORT=5000
WERADIO_DEBUG=False

# Architecture Mode
# -------------------------
# STREAMER: Enable or disable streaming mode with HLS/FFmpeg, useful for single streamer       
#           and multiple API nodes setup
#   - "true"  = Streamer node
#   - "false" = API-only node
STREAMER=true

# Storage Mode
# ------------
# OBJECT_STORAGE: Use MinIO object storage instead of local filesystem
#   - "false" = Use local filesystem (data/ folder)
#   - "true"  = Use MinIO object storage
OBJECT_STORAGE=false

# Queue Settings
# --------------
WERADIO_QUEUE_SIZE=100 # Max tracks queue size

# Logging Configuration
# ---------------------
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
WERADIO_LOG_LEVEL=INFO

# MinIO Configuration 
# ---------------------------------------------------------
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=admin
MINIO_SECRET_KEY=password123
MINIO_SECURE=false
MINIO_BUCKET_LIBRARY=weradio-library
MINIO_BUCKET_CACHE=weradio-cache
MINIO_BUCKET_HLS=weradio-hls

# Redis Configuration
# ---------------------------
# Redis is used to share state between streamer and API nodes
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=password123 # CHANGE THIS TO A STRONG PASSWORD

# PostgreSQL Database
# -------------------
# Used for user authentication and track metadata storage
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=weradio
POSTGRES_USER=weradio_user
POSTGRES_PASSWORD=your_secure_password_here

# PostgreSQL Root admin
# -------------------
# The first admin user will be created with these credentials
ROOT_DB_USER=admin
ROOT_DB_EMAIL=admin@weradio.local
ROOT_DB_PASSWORD=password123 # CHANGE THIS TO A STRONG PASSWORD

# JWT Configuration
# -----------------
# Used for securing API endpoints and user sessions
JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production # CHANGE THIS TO A STRONG SECRET
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24
# Generate a secure JWT_SECRET_KEY with:
# python -c "import secrets; print(secrets.token_urlsafe(32))"
